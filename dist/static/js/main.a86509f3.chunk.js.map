{"version":3,"sources":["store/actions/authActions.js","Components/View/layout/SignedInLinks.js","Components/View/layout/SignedOutLinks.js","Components/View/layout/Navbar.js","Components/View/dashboard/Notifications.js","Components/Controller/projects/ProjectSummary.js","Components/Controller/projects/ProjectList.js","Components/View/dashboard/Dasboard.js","Components/Controller/projects/ProjectDetails.js","Components/View/auth/SignIn.js","Components/View/auth/SignUp.js","Components/View/auth/DocSignUp.js","config/fbConfig.js","Components/Controller/projects/CreateProject.js","store/actions/projectActions.js","Components/Controller/notes/CreateNote.js","store/actions/noteAction.js","Components/Controller/notes/NotesDashboard.js","Components/View/auth/signInInterface.js","Components/View/auth/userSignIn.js","Components/View/auth/doctorSignIn.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/noteReducer.js","store/reducers/rootReducer.js","index.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","connect","signOut","props","console","log","profile","initials","className","to","onClick","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","useruser","currentUser","doctor","userId","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","authorId","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ProjectDetails","prediction","accuracy","pathname","aboutProps","window","location","href","width","src","url","ownProps","match","params","data","SignIn","onSubmit","handleSubmit","authError","SignUp","firstName","lastName","isDoctor","handleChange","e","setState","target","value","preventDefault","signUp","htmlFor","onChange","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","handleLocation","handleDoctorCheck","docsignUp","selected","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","storage","doctorName","docLocation","doctorId","responseObj","CreateProject","document","getElementById","options","length","Option","j","i","handledoctorChange","handleImageChange","files","image","handleUpload","progresBar","style","display","acceptable","thisUrl","fd","FormData","append","name","axios","post","onUploadProgress","progressEvent","res","ref","child","getDownloadURL","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","JSON","parse","responseText","isAcceptable","open","send","setTimeout","alert","reload","percentageAccuracy","predictionType","createProject","history","push","bind","baseState","fsDB","get","querySnapshot","forEach","add","Date","CreateNote","projectIdn","substr","lastIndexOf","createNote","note","noteContent","noteTitle","noteCreatedAt","noteProject","NotesDashboard","rows","signInInterface","userSignIn","sigInInterface","creds","doctorSignIn","App","exact","path","component","DocSignUp","Boolean","hostname","initState","authReducer","action","message","projectReducer","notes","noteReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a86509f3.chunk.js","sourcesContent":["//import { getFirebase, firebaseReducer } from \"react-redux-firebase\"\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0],\r\n               \r\n            })\r\n            //resp.user\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const docsignUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('doctorsList').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0],\r\n                location: newUser.location\r\n            })\r\n            //resp.user\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n\r\n\r\n    }\r\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { connect} from \"react-redux\";\nimport {signOut} from '../../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    console.log(\"Initials \" +props.profile.initials);\n    return  (\n      \n        <ul className='right'>\n            <li><NavLink to='/createproject'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {props.profile.initials}\n                </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className='right'>\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n           \n            <li><NavLink to='/docsignup'>Doctor Sign Up</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n    const {auth, profile} = props;\n    //console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return  (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">CanTest - Skin Cancer Detection</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);  ","import React from 'react';\nimport moment from 'moment';\nimport firebase from 'firebase';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            let useruser = firebase.auth().currentUser;\n                            console.log(\"Diff \"+item.doctor+\" \"+useruser.uid);\n\n\n                            if (item.userId == useruser.uid || item.doctor == useruser.uid) {\n                                console.log(\"SAME \" + item.doctor + \" \" + useruser.uid);\n                                return (\n                                    <li key={item.id}>\n                                        <span className=\"pink-text\">{item.user} </span>\n                                        <span>{item.content}</span>\n                                        <div className=\"grey-text note-date\">\n                                            {moment(item.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n\n                                )\n                            }\n\n                           \n\n\n\n\n                        })}\n                    </ul>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Notifications;","import React from 'react';\nimport ProjectList from './ProjectList';\nimport moment from 'moment';\nimport { getFirebase } from 'react-redux-firebase'\nimport firebase from 'firebase';\n\nconst ProjectSummary = ({ project }) => {\n  \n            return (\n\n                <div className=\"card z-depth-0 project-summary\">\n                    <div className=\"card-content grey-text text-darken-3\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                    </div>\n                </div>\n\n            );\n   \n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\n\n\n\n\n\nconst ProjectList = ({ projects }) => {\n   // getDoc();\n\n    return (\n\n\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n\n                let useruser = firebase.auth().currentUser;\n\n                if (project.authorId == useruser.uid || project.doctor == useruser.uid) {\n                    \n                   \n                    return (\n\n                        <Link to={'/project/' + project.id} key={project.id} >\n                            <ProjectSummary project={project} />\n                        </Link>\n\n                    );\n                }\n\n\n\n\n            })}\n        </div>\n\n\n    );\n}\n\n\nexport default ProjectList;\n\n","import React, { Component } from \"react\";\nimport Notifications from './Notifications';\nimport ProjectList from '../../Controller/projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, getFirebase } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n     \n        \n\n            return (\n                <div className=\"dashboard container\">\n                    <div className=\"row\">\n                        <div className=\"col s12 m6\">\n                            <ProjectList  projects={projects}  />\n                        </div>\n\n                        <div className=\"col s12 m5 offset-m1\">\n                            <Notifications notifications = {notifications}/>\n                        </div>\n\n                       \n\n                    </div>\n                </div>\n            );\n\n\n        \n        \n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications,\n       \n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\n    ])\n)\n    (Dashboard);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ProjectDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const { project, auth } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        if (project) {\r\n            console.log(\"Project\" + project.title);\r\n\r\n            return (\r\n\r\n\r\n                <div className=\"container section project-details\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">Title: {project.title}</span>\r\n                            <p>{project.content}</p>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            <span className=\"card-title\">Test Results</span>\r\n                            <p>Prediction Made: {project.prediction}</p>\r\n                            <p>Accuracy: {project.accuracy}</p>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            <button className=\"btn black lighten-1 z-depth-0\"><Link to={{\r\n                                pathname: '/createnote',\r\n                                aboutProps: {\r\n                                    id: window.location.href\r\n                                }\r\n                            }} >Add Note</Link></button>\r\n\r\n                            <button className=\"btn black lighten-1 z-depth-0\"><Link to={{\r\n                                pathname: '/notedashboard',\r\n                                aboutProps: {\r\n                                    id: window.location.href\r\n                                }\r\n                            }} >View Notes</Link></button>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"card-action gret lighten-4 grey-text\">\r\n                            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                            <div>{project.location}</div>\r\n\r\n\r\n                        </div>\r\n                        <fieldset>\r\n                            Image\r\n                                <img className=\"materialboxed\" width=\"300\" src={project.url} />\r\n                        </fieldset>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <p>Loading Project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth,\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' },\r\n\r\n    ]),\r\n\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    \r\n\r\n                    <ul className='center'>\r\n                    <h5 className=\"grey-text text-darken-3\">Choose the User Profile Type</h5>\r\n                        <li><NavLink to='/usersignin' className=\"btn pink lighten-1 z-depth-0\">User</NavLink></li>\r\n                        <p></p>\r\n                        <li><NavLink to='/doctorsignin' className=\"btn pink lighten-1 z-depth-0\">Doctor</NavLink></li>\r\n                    </ul>\r\n                </form>\r\n            </div >\r\n\r\n\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapstateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapstateToProps)(SignIn);","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../../store/actions/authActions';\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        isDoctor: false\r\n    }\r\n\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n                   \r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport { docsignUp } from '../../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        location: null\r\n\r\n    }\r\n\r\n    handleLocation = (e) => {\r\n        e.preventDefault();\r\n        \r\n        this.setState({ location: e.target.value });\r\n\r\n\r\n\r\n    }\r\n\r\n    handleDoctorCheck = (e) => {\r\n        console.log(\"Reach\");\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.docsignUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Doctor Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <h7 className=\"grey-text text-darken-3\" htmlFor=\"location\">Location</h7>\r\n                    <div className=\"input-field\">\r\n\r\n                        <select className=\"dropdown-trigger btn z-depth-0\" onChange={this.handleLocation} id=\"location\">\r\n                        <option selected >Please Select your Current Location</option>\r\n                            <option  value=\"regina\">Regina</option>\r\n                            <option value=\"saskatoon\">Saskatoon</option>\r\n                            <option value=\"calgary\">Calgary</option>\r\n                            <option value=\"edmonton\">Edmonton</option>\r\n                        </select>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        docsignUp: (newUser) => dispatch(docsignUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDCteT6Ophq9LAqvBnc1nN6hyZFgV9qIEY\",\n    authDomain: \"imageupload-9a880.firebaseapp.com\",\n    databaseURL: \"https://imageupload-9a880.firebaseio.com\",\n    projectId: \"imageupload-9a880\",\n    storageBucket: \"imageupload-9a880.appspot.com\",\n    messagingSenderId: \"387742874102\",\n    appId: \"1:387742874102:web:1e46221f8a65c716d06fd7\",\n    measurementId: \"G-BB3F12MLQ9\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nconst storage = firebase.storage();\n\nexport {\n    storage, firebase as default\n}","import React, { Component } from 'react'\nimport { createProject } from '../../../store/actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { storage } from '../../../config/fbConfig';\nimport firebase from 'firebase';\nlet doctorName = [];\nlet docLocation = [];\nlet doctorId = [];\nlet responseObj = null;\n\nclass CreateProject extends Component {\n\n    constructor(props) {\n\n\n        super(props);\n\n        this.state = {\n            image: null,\n            url: '',\n            location: null,\n            title: '',\n            content: '',\n            doctor: null,\n            accuracy: null,\n            prediction: null\n\n        }\n\n        this.handleChange = this\n            .handleChange\n            .bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n\n        // preserve the initial state in a new object\n        this.baseState = this.state;\n    }\n\n\n\n    // Doctor List Generation\n    async componentDidMount() {\n        document.getElementById(\"progress\").style.display = \"none\";\n        document.getElementById(\"createButton\").style.display = \"none\";\n        const fsDB = firebase.firestore();\n        await fsDB.collection(\"doctorsList\").get().then(function (querySnapshot) {\n            let i = 0;\n            querySnapshot.forEach(function (doc) {\n                console.log(\"i: \" + i);\n                doctorName[i] = doc.data().firstName+ \" \" + doc.data().lastName;\n                docLocation[i] = doc.data().location;\n                doctorId[i] = doc.id;\n                console.log(\"iDoc: \" + doctorId[i]);\n                i = i + 1;\n\n            });\n\n\n        });\n\n    }\n\n\n\n\n    handleLocation = (e) => {\n        e.preventDefault();\n\n        this.setState({ location: e.target.value });\n        console.log(\"Location: \" + e.target.value);\n\n\n        document.getElementById(\"second-choice\").options.length = 0;\n        document.getElementById(\"second-choice\").options[0] = new Option(\"Please Choose the Doctor\", null);\n        let j = 1;\n        for (let i = 0; i < doctorName.length; i++) {\n\n            if (docLocation[i] == e.target.value) {\n\n                document.getElementById(\"second-choice\").options[j] = new Option(\"Dr. \" + doctorName[i], doctorId[i], false, false);\n                j = j + 1;\n\n\n            }\n            else {\n\n            }\n\n        }\n\n\n    }\n\n    handledoctorChange = (e) => {\n        e.preventDefault();\n        //console.log(\"Doctor: \" + e.target.value);\n        this.setState({ doctor: e.target.value });\n\n    }\n\n    handleChange = (e) => {\n        // console.log(\"HITT\");\n\n\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n\n\n\n    }\n\n    handleImageChange = (e) => {\n\n        if (e.target.files[0]) {\n            // console.log(\"hitt Image\");\n            const image = e.target.files[0];\n            this.setState(() => ({ image }));\n\n        }\n\n    }\n\n    handleUpload = (e) => {\n        let progresBar = document.getElementById(\"progress\");\n        progresBar.style.display = \"block\";\n\n        e.preventDefault();\n        let acceptable = false;\n        let thisUrl = null;\n        const fd = new FormData();\n        fd.append('image', this.state.image, this.state.image.name);\n        axios.post('https://us-central1-imageupload-9a880.cloudfunctions.net/uploadFile', fd, {\n            onUploadProgress: progressEvent => {\n                //console.log('UploadProgress: ' + Math.round((progressEvent.loaded / progressEvent.total) * 100) + '%')\n\n            }\n        })\n            .then(res => {\n                storage.ref().child(this.state.image.name).getDownloadURL().then(url => {\n                    thisUrl = url;\n                    this.setState({\n                        url: url,\n                        image: null\n                    });\n                    console.log(\"HIT\" + thisUrl);\n                }).then(() => {\n\n\n                    var xhr = new XMLHttpRequest();\n                    xhr.withCredentials = false;\n\n                    let useruser = firebase.auth().currentUser;\n\n\n                    xhr.addEventListener(\"readystatechange\", function () {\n                        if (this.readyState === 4) {\n                            responseObj = JSON.parse(this.responseText);\n                            acceptable = responseObj.isAcceptable;\n                            console.log(\"this is the response0: \" + this.responseText);\n                            //  document.getElementById(\"progress\").style.display = \"none\";\n\n\n\n                        }\n                    });\n\n                    console.log(\"https://flask-sc-2qevsxcoxq-uc.a.run.app/skin-cancer/get-prediction?image-url=\" + thisUrl + \"&user-id=\" + useruser.uid);\n                    xhr.open(\"GET\", \"https://flask-sc-2qevsxcoxq-uc.a.run.app/skin-cancer/get-prediction?image-url=\" + thisUrl + \"&user-id=\" + useruser.uid);\n\n                    xhr.send();\n\n\n\n\n\n                }).then(setTimeout(() => {\n                    this.setState({\n\n                        image: acceptable\n                    });\n                    \n                   \n                    \n\n\n                }, 4000))\n                    .then(setTimeout(() => {\n\n                        if (this.state.image != true) {\n                            window.alert(\"The Image is not Acceptable. Please use a different Image\");\n                            window.location.reload(true);\n\n                        }\n\n                        else {\n                            this.setState({\n                                image: null,\n                                accuracy: responseObj.percentageAccuracy,\n                                prediction: responseObj.predictionType\n                            });\n                            console.log(\"Check Done Finlyy\");\n                            progresBar.style.display = \"none\";\n                            document.getElementById(\"createButton\").style.display = \"block\";\n                        }\n\n                    }, 6000));\n                    \n\n            });\n\n\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.image != false) {\n            this.props.createProject(this.state);\n            this.props.history.push('/');\n        }\n\n\n    }\n\n\n\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n\n        return (\n\n\n            <div className=\"conatiner\">\n\n\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n                    </div>\n\n                    <input type=\"file\" onChange={this.handleImageChange} />\n\n\n                    <div className=\"input-field\">\n                        <select className=\"dropdown-trigger btn z-depth-0\" onChange={this.handleLocation} id=\"location\">\n                            <option value=\"null\">Choose the Location</option>\n                            <option value=\"regina\">Regina</option>\n                            <option value=\"saskatoon\">Saskatoon</option>\n                            <option value=\"calgary\">Calgary</option>\n                            <option value=\"edmonton\">Edmonton</option>\n                        </select>\n\n                    </div>\n\n\n                    <div className=\"input-field\">\n                        <select className=\"dropdown-trigger btn z-depth-0\" onChange={this.handledoctorChange} id=\"second-choice\">\n                            <option value=\"null\">Please choose from above</option>\n                        </select>\n\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\"\n                            onClick={this.handleUpload} >\n                            Check\n                            </button>\n                    </div>\n                    <div className=\"progress\" id=\"progress\">\n                        <div className=\"indeterminate\"  ></div>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\" id=\"createButton\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirestore}) => {\n      // make async call to database\n      const firestore = getFirestore();\n      const profile = getState().firebase.profile;\n      const authorId = getState().firebase.auth.uid;\n     // const testImage = \n      firestore.collection('projects').add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n        //testImage: \n        }).then(() => {\n            console.log('Create Hit');\n            dispatch({type: 'CREATE', project});\n        }).catch((err) => {\n            console.log('error Hit');\n            dispatch({type: 'CREATE_ERROR', err});\n        })\n        \n    }\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createNote } from '../../../store/actions/noteAction';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateNote extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.projectIdn = null;\r\n\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            projectId: null\r\n        }\r\n\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.projectIdn = this.props.location.aboutProps.id.substr(this.props.location.aboutProps.id.lastIndexOf('/') + 1);\r\n        console.log(\"Test: \"+this.projectIdn);\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n            projectId: this.projectIdn\r\n            \r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        this.props.createNote(this.state);\r\n        this.props.history.push('/project/'+this.projectIdn);\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n\r\n\r\n\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Add a new note</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                        <label htmlFor=\"title\">Note Title</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"content\">Content</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createNote: (note) => dispatch(createNote(note))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNote)","export const createNote = (note) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n     // const testImage = \r\n      firestore.collection('notesList').add({\r\n        ...note,\r\n        \r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n        //testImage: \r\n        }).then(() => {\r\n            console.log('Create Hit');\r\n            dispatch({type: 'CREATE', note});\r\n        }).catch((err) => {\r\n            console.log('error Hit');\r\n            dispatch({type: 'CREATE_ERROR', err});\r\n        })\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect, getFirebase } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport firebase from 'firebase';\r\nimport moment from 'moment';\r\n\r\nlet noteContent = [];\r\nlet noteTitle = [];\r\nlet noteCreatedAt = [];\r\nlet noteProject = [];\r\n\r\n\r\nclass NotesDashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.rows = [];\r\n        this.projectIdn = null;\r\n    }\r\n\r\n\r\n    // Doctor List Generation\r\n    async componentDidMount() {\r\n\r\n        const fsDB = firebase.firestore();\r\n        await fsDB.collection(\"notesList\").get().then(function (querySnapshot) {\r\n            let i = 0;\r\n            querySnapshot.forEach(function (doc) {\r\n\r\n                noteTitle[i] = doc.data().title;\r\n                noteContent[i] = doc.data().content;\r\n                noteCreatedAt[i] = doc.createdAt;\r\n                noteProject[i] = doc.data().projectId;\r\n                //console.log(\"Logs: \" + noteTitle[i]);\r\n                i = i + 1;\r\n\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        try {\r\n            this.projectIdn = this.props.location.aboutProps.id.substr(this.props.location.aboutProps.id.lastIndexOf('/') + 1);\r\n        }\r\n        catch (err) {\r\n            this.props.history.push('/');\r\n        }\r\n        console.log(\"Logs: \" + noteTitle.length);\r\n        if (noteTitle.length != 0) {\r\n\r\n            for (let i = 0; i < noteTitle.length; i++) {\r\n                if (noteProject[i] == this.projectIdn)\r\n                    this.rows.push(\r\n                        <div className=\"dashboard container\">\r\n                            <div className=\"row\" id=\"eachRow\">\r\n                                <div className=\"col s12 m6\">\r\n\r\n                                    <div className=\"card z-depth-0 project-summary\">\r\n                                        <div className=\"card-content grey-text text-darken-3\">\r\n                                            <span className=\"card-title\">{noteTitle[i]}</span>\r\n                                            <p>Content : {noteContent[i]} </p>\r\n                                            <p>Project ID: {noteProject[i]}</p>\r\n                                            <p className=\"grey-text\">{noteCreatedAt[i]}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>);\r\n            }\r\n\r\n\r\n            this.rows.length = 3;\r\n\r\n            return (\r\n                <div>{this.rows}</div>\r\n            );\r\n\r\n\r\n\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <p>Loading Notes...</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(NotesDashboard);","import React, { Component } from 'react';\r\n\r\n\r\nclass signInInterface extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n      // Code for handling changes made in the Sign in form\r\n    }\r\n    handleSubmit = (e) => {\r\n       // Code for handling submission on the sign in form.\r\n    }\r\n    render() {\r\n        // Rendering the class component.\r\n        return(\r\n            null\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default signInInterface;","import { connect } from \"react-redux\";\nimport {signIn} from '../../../store/actions/authActions';\nimport { Redirect } from \"react-router-dom\";\nimport React from 'react';\nimport sigInInterface from './signInInterface';\n\nclass userSignIn extends sigInInterface {\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signIn(this.state);\n    }\n    render() {\n        const {authError, auth} = this.props;\n        if(auth.uid) return <Redirect to='/'/>\n\n        return (\n            <div className=\"conatiner\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">User Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p>: null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapstateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\nsignIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapstateToProps, mapDispatchToProps)(userSignIn);\n","import { connect } from \"react-redux\";\r\nimport {signIn} from '../../../store/actions/authActions';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport sigInInterface from './signInInterface';\r\n\r\nclass doctorSignIn extends sigInInterface {\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Doctor Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapstateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\nsignIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(doctorSignIn);\r\n","import React from 'react';\nimport { Component } from 'react'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from '../src/Components/View/layout/Navbar';\nimport Dashboard from '../src/Components/View/dashboard/Dasboard';\nimport ProjectDetails from '../src/Components/Controller/projects/ProjectDetails';\nimport SignIn from '../src/Components/View/auth/SignIn';\nimport SignUp from '../src/Components/View/auth/SignUp';\nimport DocSignUp from '../src/Components/View/auth/DocSignUp';\nimport CreateProject from '../src/Components/Controller/projects/CreateProject';\nimport CreateNote from '../src/Components/Controller/notes/CreateNote';\nimport NotesDashboard from '../src/Components/Controller/notes/NotesDashboard';\nimport userSignIn from '../src/Components/View/auth/userSignIn';\nimport doctorSignIn from '../src/Components/View/auth/doctorSignIn';\n\nclass App extends Component {\n\n  \n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n\n        <Navbar />\n        \n          \n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component = {ProjectDetails}/>\n            <Route path='/signin' component = {SignIn}/>\n            <Route path='/usersignin' component = {userSignIn}/>\n            <Route path='/doctorsignin' component = {doctorSignIn}/>\n            <Route path='/signup' component = {SignUp} />\n            <Route path='/docsignup' component = {DocSignUp} />\n            <Route path='/createproject' component = {CreateProject} />\n            <Route path='/createnote' component = {CreateNote} />\n            <Route path='/notedashboard' component = {NotesDashboard}/>\n          </Switch>\n          \n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n};\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('LOGIN ERROR');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n\n        case 'LOGIN_SUCCESS':\n            console.log('LOGIN SUCCESS');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout sucess')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n\n\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n    ]\n};\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE':\n            console.log('created', action.project)\n            return state;\n        case 'CREATE_ERROR':\n            console.log('Create error', action.err)\n            return state;\n        default:\n            return state;\n    }\n   \n}\n\nexport default projectReducer;","const initState = {\r\n    notes: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ]\r\n};\r\nconst noteReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            console.log('created', action.note)\r\n            return state;\r\n        case 'CREATE_ERROR':\r\n            console.log('Create error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n   \r\n}\r\n\r\nexport default noteReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport noteReducer from './noteReducer';\nimport {combineReducers} from 'redux';\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    note: noteReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n//import { reduxFirestore, getFirestore } from 'redux-firestore';\n//import { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\n    reduxFirestore(fbConfig), // redux bindings for firestore\n\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) // redux binding for firebase\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n\n})\n\n"],"sourceRoot":""}