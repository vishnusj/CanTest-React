{"version":3,"sources":["store/actions/authActions.js","Components/View/layout/SignedInLinks.js","Components/View/layout/SignedOutLinks.js","Components/View/layout/Navbar.js","Components/View/dashboard/Notifications.js","Components/Controller/projects/ProjectSummary.js","Components/Controller/projects/ProjectList.js","Components/View/dashboard/Dasboard.js","Components/View/dashboard/DashboardInterface.js","Components/Controller/notes/NoteNotification.js","Components/Controller/projects/ProjectDetails.js","Components/Controller/projects/ProjectDetailsInterface.js","Components/View/auth/SignIn.js","Components/View/auth/SignUpInterface.js","Components/View/auth/SignUp.js","Components/View/auth/DocSignUp.js","config/fbConfig.js","Components/Controller/projects/CreateProject.js","store/actions/projectActions.js","Components/Controller/notes/CreateNote.js","store/actions/noteAction.js","Components/Controller/notes/NotesDashboard.js","Components/View/auth/signInInterface.js","Components/View/auth/userSignIn.js","Components/View/auth/doctorSignIn.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/noteReducer.js","store/reducers/rootReducer.js","index.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","connect","signOut","props","console","log","profile","initials","className","to","onClick","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","useruser","currentUser","doctor","userId","key","id","user","content","moment","time","toDate","fromNow","doctorId","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","authorId","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","NoteNotifications","window","location","href","substr","lastIndexOf","noteTitle","noteContent","ProjectDetails","colourChange","e","colour","document","getElementById","value","color","prediction","toUpperCase","accuracy","NoteNotification","pathname","aboutProps","width","src","url","ownProps","match","params","data","SignIn","onSubmit","handleSubmit","authError","SignUpInterface","firstName","lastName","isDoctor","handleChange","SignUp","setState","target","preventDefault","length","alert","signUp","htmlFor","onChange","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","handleLocation","handleDoctorCheck","docsignUp","selected","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","storage","doctorName","docLocation","responseObj","CreateProject","options","Option","j","i","handledoctorChange","handleImageChange","files","image","handleUpload","progresBar","style","display","isBlurry","isLowRes","thisUrl","fd","FormData","d","Date","imageName","getTime","replace","append","axios","post","onUploadProgress","progressEvent","res","ref","child","getDownloadURL","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","JSON","parse","responseText","open","send","setTimeout","reload","percentageAccuracy","predictionType","createProject","history","push","bind","baseState","fsDB","get","querySnapshot","forEach","add","username","docName","docId","CreateNote","projectIdn","author","authorName","createNote","note","noteCreatedAt","noteProject","noteAuthor","NotesDashboard","rows","sort","signInInterface","userSignIn","sigInInterface","creds","doctorSignIn","App","exact","path","component","DocSignUp","Boolean","hostname","initState","authReducer","action","message","projectReducer","notes","noteReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6093165b.chunk.js","sourcesContent":["export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err })\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0],\r\n               \r\n            })\r\n            //resp.user\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const docsignUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('doctorsList').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0]+newUser.lastName[0],\r\n                location: newUser.location\r\n            })\r\n            //resp.user\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n\r\n\r\n    }\r\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { signOut } from '../../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    console.log(\"Initials \" + props.profile.initials);\n    let initials = props.profile.initials ? props.profile.initials : \"Dr\";\n    return (\n\n        <ul className='right'>\n            <li><NavLink to='/createproject'>New Test</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {initials}\n            </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className='right'>\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n           \n            <li><NavLink to='/docsignup'>Doctor Sign Up</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n    const {auth, profile} = props;\n    console.log(\"Profile \"+profile.initials);\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return  (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">CanTest - Skin Cancer Detection</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);  ","import React from 'react';\nimport moment from 'moment';\nimport firebase from 'firebase';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            \n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            let useruser = firebase.auth().currentUser;\n                            console.log(\"Diff \" + item.doctor + \" \" + useruser.uid);\n\n\n                            if (item.userId == useruser.uid) {\n                                \n                                return (\n                                    <div className=\"card-panel red accent-1\">\n                                    <li key={item.id}>\n                                        <span className=\"black-text\">{item.user} </span>\n                                        <span className=\"black-text\">{item.content}</span>\n                                        <div className=\"grey-text note-date\">\n                                            {moment(item.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n                                    </div>\n\n                                )\n                            }\n\n                            if (item.doctorId == useruser.uid) {\n                               \n                                return (\n                                    <li key={item.id}>\n                                        <span className=\"pink-text\">{item.user} </span>\n                                        <span>{item.content}</span>\n                                        <div className=\"grey-text note-date\">\n                                            {moment(item.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n\n                                )\n                            }\n\n\n\n                        })}\n                    </ul>\n                </div>\n            </div>\n        \n        </div >\n    );\n}\n\nexport default Notifications;","import React from 'react';\nimport ProjectList from './ProjectList';\nimport moment from 'moment';\nimport { getFirebase } from 'react-redux-firebase'\nimport firebase from 'firebase';\n\nconst ProjectSummary = ({ project }) => {\n\n    return (\n       \n            \n                <div className=\"card-content grey-text text-darken-3\">\n                    <div className=\"card-panel purple lighten-5\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                    </div>\n                </div>\n            \n           \n    );\n\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\n\n\n\n\n\nconst ProjectList = ({ projects }) => {\n   // getDoc();\n\n    return (\n\n\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n\n                let useruser = firebase.auth().currentUser;\n\n                if (project.authorId == useruser.uid || project.doctor == useruser.uid) {\n                    \n                   \n                    return (\n\n                        <Link to={'/project/' + project.id} key={project.id} >\n                            <ProjectSummary project={project} />\n                        </Link>\n\n                    );\n                }\n\n\n\n\n            })}\n        </div>\n\n\n    );\n}\n\n\nexport default ProjectList;\n\n","import React, { Component } from \"react\";\nimport Notifications from './Notifications';\nimport ProjectList from '../../Controller/projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, getFirebase } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport DashboardInterface from './DashboardInterface';\n\n\n\nclass Dashboard extends DashboardInterface {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n\n\n        return (\n            <div className=\"dashboard container\">\n\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n\n                        <ProjectList projects={projects} />\n\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n\n                        <Notifications notifications={notifications} />\n                        \n                    </div>\n\n\n\n                </div>\n            </div>\n        );\n\n\n\n\n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications,\n\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)\n    (Dashboard);","import React, { Component } from \"react\";\r\n\r\nclass DashboardInterface extends Component {\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            null\r\n        );\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default DashboardInterface;","import React from 'react';\r\nimport moment from 'moment';\r\nimport firebase from 'firebase';\r\n\r\nconst NoteNotifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Last Note:</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            let useruser = firebase.auth().currentUser;\r\n\r\n                            if (item.content == 'has a new Note') {\r\n\r\n                                if (item.project == window.location.href.substr(window.location.href.lastIndexOf('/') + 1)) {\r\n\r\n\r\n\r\n                                    return (\r\n\r\n                                        <div className=\"card-panel cyan lighten-4\">\r\n                                            <li key={item.id}>\r\n\r\n                                                <span className=\"black-text\">{item.user} </span>\r\n                                                <span> added the last note {moment(item.time.toDate()).fromNow()}</span>\r\n                                                \r\n                                                <p className=\"blck-text\">Wrote : <span></span>\r\n                                                <span className=\"black-text\">{item.noteTitle}: {item.noteContent} </span></p>\r\n                                                \r\n                                            </li>\r\n                                        </div>\r\n\r\n                                    )\r\n                                }\r\n\r\n                            }\r\n\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoteNotifications;","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport NoteNotification from '../notes/NoteNotification';\r\nimport ProjectDetailsInterface from './ProjectDetailsInterface';\r\n\r\nclass ProjectDetails extends ProjectDetailsInterface {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.value = null;\r\n        this.color = null;\r\n    }\r\n\r\n    colourChange = (e) => {\r\n        let colour = document.getElementById(\"result\");\r\n        console.log(\"Value: \"+this.value);\r\n        if (this.value == 'malignant') {\r\n            colour.className = \"card-panel orange lighten-4\";\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n\r\n        const { project, auth, notifications } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        if (project) {\r\n\r\n           \r\n            this.value = project.prediction;\r\n            if (this.value == 'malignant') {\r\n                this.color = \"card-panel red accent-1\";\r\n            }\r\n            else{\r\n                this.color = \"card-panel green lighten-4\";\r\n            }\r\n\r\n\r\n\r\n            return (\r\n\r\n\r\n                <div className=\"container section project-details\">\r\n\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content\">\r\n                            <div className=\"card-panel cyan lighten-4\">\r\n                                <span className=\"card-title\">Title: {project.title}</span>\r\n                                <p>{project.content}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n\r\n                            <div className={this.color} >\r\n                                <span className=\"card-title\">Test Results</span>\r\n                                <p>Prediction Made: <b>{project.prediction.toUpperCase()}</b></p>\r\n                                <p>Accuracy:  <b>{project.accuracy}</b></p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <NoteNotification notifications={notifications} />\r\n\r\n                        <div className=\"card-content\">\r\n                            <div className=\"card-panel cyan lighten-4\">\r\n\r\n                                <button className=\"btn black lighten-1 z-depth-0\"><Link to={{\r\n                                    pathname: '/createnote',\r\n                                    aboutProps: {\r\n                                        id: window.location.href\r\n                                    }\r\n                                }} >Add Note</Link></button>\r\n\r\n                                <span>  </span>\r\n\r\n                                <button className=\"btn black lighten-1 z-depth-0\"><Link to={{\r\n                                    pathname: '/notedashboard',\r\n                                    aboutProps: {\r\n                                        id: window.location.href\r\n                                    }\r\n                                }} >View Notes</Link></button>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"card-action gret lighten-4 grey-text\">\r\n                            <div className=\"card-panel green lighten-4\">\r\n                                <div className=\"black-text text-darken-2\">Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                                <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                                <div>{project.location}</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <fieldset>\r\n                            Image\r\n                                <img className=\"materialboxed\" width=\"300\" src={project.url} />\r\n                        </fieldset>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <p>Loading Project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n\r\n    ]),\r\n\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\n\r\nclass ProjectDetailsInterface extends Component {\r\n\r\n    render() {\r\n        return (\r\n            null\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ProjectDetailsInterface;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    \r\n\r\n                    <ul className='center'>\r\n                    <h5 className=\"grey-text text-darken-3\">Choose the User Profile Type</h5>\r\n                        <li><NavLink to='/usersignin' className=\"btn pink lighten-1 z-depth-0\">User</NavLink></li>\r\n                        <p></p>\r\n                        <li><NavLink to='/doctorsignin' className=\"btn pink lighten-1 z-depth-0\">Doctor</NavLink></li>\r\n                    </ul>\r\n                </form>\r\n            </div >\r\n\r\n\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapstateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapstateToProps)(SignIn);","import React, { Component } from 'react'\r\n\r\n\r\n\r\nclass SignUpInterface extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        isDoctor: false\r\n    }\r\n\r\n    \r\n    handleChange = (e) => {\r\n        // Code for handling changes made in the Sign Up form\r\n       \r\n    }\r\n    handleSubmit = (e) => {\r\n      // Code for handling submission on the sign up form.\r\n    }\r\n    render() {\r\n      // Rendering the class component.\r\n      return(\r\n          null\r\n      )\r\n    }\r\n}\r\n\r\n\r\nexport default SignUpInterface;\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../../store/actions/authActions';\r\nimport SignUpInterface from './SignUpInterface'\r\n\r\nclass SignUp extends SignUpInterface {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        });\r\n       \r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (this.state.firstName.length == 0)\r\n            window.alert(\"First name cannot be empty\");\r\n        else if (this.state.lastName.length == 0)\r\n            window.alert(\"Last name cannot be empty\");\r\n        else {\r\n            console.log(this.state);\r\n            this.props.signUp(this.state);\r\n        }\r\n    }\r\n    render() {\r\n        \r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        \r\n        return (\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport SignUpInterface from './SignUpInterface'\r\nimport { docsignUp } from '../../../store/actions/authActions';\r\n\r\nclass SignUp extends SignUpInterface {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        location: ''\r\n\r\n    }\r\n\r\n    handleLocation = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({ location: e.target.value });\r\n\r\n\r\n\r\n    }\r\n\r\n    handleDoctorCheck = (e) => {\r\n        console.log(\"Reach\");\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.firstName.length == 0)\r\n            window.alert(\"First name cannot be empty\");\r\n        else if (this.state.lastName.length == 0)\r\n            window.alert(\"Last name cannot be empty\");\r\n        else if (this.state.location.length == 0)\r\n            window.alert(\"Location cannot be empty\");\r\n        else {\r\n            console.log(this.state);\r\n            this.props.docsignUp(this.state);\r\n        }\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Doctor Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <h7 className=\"grey-text text-darken-3\" htmlFor=\"location\">Location</h7>\r\n                    <div className=\"input-field\">\r\n\r\n                        <select className=\"dropdown-trigger btn z-depth-0\" onChange={this.handleLocation} id=\"location\">\r\n                            <option selected >Please Select your Current Location</option>\r\n                            <option value=\"regina\">Regina</option>\r\n                            <option value=\"saskatoon\">Saskatoon</option>\r\n                            <option value=\"calgary\">Calgary</option>\r\n                            <option value=\"edmonton\">Edmonton</option>\r\n                        </select>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        docsignUp: (newUser) => dispatch(docsignUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDCteT6Ophq9LAqvBnc1nN6hyZFgV9qIEY\",\n    authDomain: \"imageupload-9a880.firebaseapp.com\",\n    databaseURL: \"https://imageupload-9a880.firebaseio.com\",\n    projectId: \"imageupload-9a880\",\n    storageBucket: \"imageupload-9a880.appspot.com\",\n    messagingSenderId: \"387742874102\",\n    appId: \"1:387742874102:web:1e46221f8a65c716d06fd7\",\n    measurementId: \"G-BB3F12MLQ9\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nconst storage = firebase.storage();\n\nexport {\n    storage, firebase as default\n}","import React, { Component } from 'react'\nimport { createProject } from '../../../store/actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { storage } from '../../../config/fbConfig';\nimport firebase from 'firebase';\n\n//Globals\nlet doctorName = [];\nlet docLocation = [];\nlet doctorId = [];\nlet responseObj = null;\n\nclass CreateProject extends Component {\n\n    constructor(props) {\n\n\n        super(props);\n\n        this.state = {\n            image: null,\n            url: '',\n            location: null,\n            title: '',\n            content: '',\n            doctor: null,\n            accuracy: null,\n            prediction: null\n\n        }\n\n        this.handleChange = this\n            .handleChange\n            .bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n\n        // preserve the initial state in a new object\n        this.baseState = this.state;\n    }\n\n\n\n    // Doctor List Generation\n    async componentDidMount() {\n        document.getElementById(\"progress\").style.display = \"none\";\n        document.getElementById(\"createButton\").style.display = \"none\";\n        const fsDB = firebase.firestore();\n        await fsDB.collection(\"doctorsList\").get().then(function (querySnapshot) {\n            let i = 0;\n            querySnapshot.forEach(function (doc) {\n                console.log(\"i: \" + i);\n                doctorName[i] = doc.data().firstName + \" \" + doc.data().lastName;\n                docLocation[i] = doc.data().location;\n                doctorId[i] = doc.id;\n                console.log(\"iDoc: \" + doctorId[i]);\n                i = i + 1;\n\n            });\n\n\n        });\n\n    }\n\n\n\n\n    handleLocation = (e) => {\n        e.preventDefault();\n\n        this.setState({ location: e.target.value });\n        console.log(\"Location: \" + e.target.value);\n\n\n        document.getElementById(\"second-choice\").options.length = 0;\n        document.getElementById(\"second-choice\").options[0] = new Option(\"Please Choose the Doctor\", null);\n        let j = 1;\n        for (let i = 0; i < doctorName.length; i++) {\n\n            if (docLocation[i] == e.target.value) {\n\n                document.getElementById(\"second-choice\").options[j] = new Option(\"Dr. \" + doctorName[i], doctorId[i], false, false);\n                j = j + 1;\n\n\n            }\n            else {\n\n            }\n\n        }\n\n\n    }\n\n    handledoctorChange = (e) => {\n        e.preventDefault();\n        //console.log(\"Doctor: \" + e.target.value);\n        this.setState({ doctor: e.target.value });\n\n    }\n\n    handleChange = (e) => {\n        // console.log(\"HITT\");\n\n\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n\n\n\n    }\n\n    handleImageChange = (e) => {\n\n        if (e.target.files[0]) {\n            // console.log(\"hitt Image\");\n            const image = e.target.files[0];\n            this.setState(() => ({ image }));\n\n        }\n\n    }\n\n    handleUpload = (e) => {\n        let progresBar = document.getElementById(\"progress\");\n        progresBar.style.display = \"block\";\n\n        e.preventDefault();\n        let isBlurry = false;\n        let isLowRes = false;\n        let thisUrl = null;\n        const fd = new FormData();\n        const useruser = firebase.auth().currentUser;\n        const d = new Date;\n        let imageName = useruser.uid + d.getTime();\n        imageName = imageName.replace(/[&\\/\\\\#,+()$~% -'\":*?<>{}]/g, '');\n        console.log(\"Image Name: \" + imageName);\n        fd.append('image', this.state.image, imageName);\n        axios.post('https://us-central1-imageupload-9a880.cloudfunctions.net/uploadFile', fd, {\n            onUploadProgress: progressEvent => {\n\n            }\n        })\n            .then(res => {\n                storage.ref().child(imageName).getDownloadURL().then(url => {\n                    thisUrl = url;\n                    this.setState({\n                        url: url,\n                        image: null\n                    });\n                    console.log(\"HIT\" + thisUrl);\n                }).then(() => {\n\n\n                    var xhr = new XMLHttpRequest();\n                    xhr.withCredentials = false;\n\n                    const useruser = firebase.auth().currentUser;\n\n\n                    xhr.addEventListener(\"readystatechange\", function () {\n                        if (this.readyState === 4) {\n                            responseObj = JSON.parse(this.responseText);\n\n                            isBlurry = responseObj.isBlurry;\n                            isLowRes = responseObj.isLowRes;\n\n\n                        }\n                    });\n\n                    //console.log(\"https://flask-sc-2qevsxcoxq-uc.a.run.app/skin-cancer/get-prediction?image-url=\" + thisUrl + \"&user-id=\" + useruser.uid);\n\n                    xhr.open(\"GET\", \"https://flask-sc-2qevsxcoxq-uc.a.run.app/skin-cancer/get-prediction?image-url=\" + thisUrl + \"&user-id=\" + useruser.uid);\n\n                    xhr.send();\n\n\n\n\n\n                }).then(setTimeout(() => {\n\n                    if (isBlurry == true) {\n                        window.alert(\"The Image is seems to be Blurry. Please use a different Image\");\n                        window.location.reload(true);\n\n                    }\n\n                    else if (isLowRes == true) {\n                        window.alert(\"The Image resolution is too low. The minimum resolution should be 300x300. Please use a different Image\");\n                        window.location.reload(true);\n                    }\n\n                    else {\n                        this.setState({\n                            accuracy: responseObj.percentageAccuracy,\n                            prediction: responseObj.predictionType\n                        });\n                        console.log(\"Check Done Finlyy\");\n                        progresBar.style.display = \"none\";\n                        document.getElementById(\"createButton\").style.display = \"block\";\n                    }\n\n                }, 10000));\n\n\n            });\n\n\n\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.image != false) {\n            this.props.createProject(this.state);\n            this.props.history.push('/');\n        }\n\n\n    }\n\n\n\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n\n        return (\n\n\n            <div className=\"conatiner\">\n\n\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Test</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Test Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Test Details</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"black-text text-darken-10\">\n                        Choose Image : -\n                        <input id = \"imagebtn\" type=\"file\" onChange={this.handleImageChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <select className=\"dropdown-trigger btn z-depth-0\" onChange={this.handleLocation} id=\"location\">\n                            <option value=\"null\">Select the Current Location</option>\n                            <option value=\"regina\">Regina</option>\n                            <option value=\"saskatoon\">Saskatoon</option>\n                            <option value=\"calgary\">Calgary</option>\n                            <option value=\"edmonton\">Edmonton</option>\n                        </select>\n\n                    </div>\n\n\n                    <div className=\"input-field\">\n                        <select className=\"dropdown-trigger btn z-depth-0\" onChange={this.handledoctorChange} id=\"second-choice\">\n                            <option value=\"null\">Please Select Location first</option>\n                        </select>\n\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\"\n                            onClick={this.handleUpload} >\n                            Save Data\n                            </button>\n                    </div>\n                    <div className=\"progress\" id=\"progress\">\n                        <div className=\"indeterminate\"  ></div>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\" id=\"createButton\">Create Test</button>\n                    </div>\n                </form>\n            </div >\n        )\n    }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n\n    // Setup listners to keep track of when the state is changed\n    // to triger rerenders (observer pattern)\n    const listeners = [];\n\n    const subscribe = (listener) => (\n        listeners.push(listener)\n    );\n    \n    return (dispatch, getState, { getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        // const testImage = \n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n            //testImage: \n        }).then(() => {\n            console.log('Create Hit');\n            dispatch({ type: 'CREATE', project });\n        }).catch((err) => {\n            console.log('error Hit');\n            dispatch({ type: 'CREATE_ERROR', err });\n        })\n\n    }\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createNote } from '../../../store/actions/noteAction';\r\nimport { Redirect } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nlet username = [];\r\nlet userId = [];\r\nlet docName = [];\r\nlet docId = [];\r\nclass CreateNote extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.projectIdn = null;\r\n\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            projectId: null,\r\n            authorName: ''\r\n        }\r\n\r\n    }\r\n\r\n    // Note List Generation\r\n    async componentDidMount() {\r\n\r\n        const fsDB = firebase.firestore();\r\n        await fsDB.collection(\"users\").get().then(function (querySnapshot) {\r\n            let i = 0;\r\n            querySnapshot.forEach(function (doc) {\r\n\r\n                username[i] = doc.data().firstName + \" \" + doc.data().lastName;\r\n                userId[i] = doc.id;\r\n                i = i + 1;\r\n\r\n            });\r\n\r\n\r\n        });\r\n\r\n        await fsDB.collection(\"doctorsList\").get().then(function (querySnapshot) {\r\n            let i = 0;\r\n            querySnapshot.forEach(function (doc) {\r\n\r\n                docName[i] = doc.data().firstName + \" \" + doc.data().lastName;\r\n                docId[i] = doc.id;\r\n                i = i + 1;\r\n\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const useruser = firebase.auth().currentUser;\r\n        this.projectIdn = this.props.location.aboutProps.id.substr(this.props.location.aboutProps.id.lastIndexOf('/') + 1);\r\n        let author = null;\r\n        \r\n        for (let i = 0; i < username.length; i++) {\r\n            if (useruser.uid == userId[i]) {\r\n                author = username[i];\r\n                console.log(\"User Hit:\"+author);\r\n            }\r\n        }\r\n        for (let i = 0; i < docName.length; i++){\r\n\r\n             if(useruser.uid == docId[i]){\r\n                author = docName[i];\r\n                console.log(\"Doc Hit:\"+author);\r\n            }\r\n        }\r\n\r\n       \r\n\r\n        this.setState({\r\n            projectId: this.projectIdn,\r\n            authorName: author,\r\n            [e.target.id]: e.target.value,\r\n\r\n        })\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        this.props.createNote(this.state);\r\n        this.props.history.push('/project/' + this.projectIdn);\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n\r\n\r\n\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Add a new note</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                        <label htmlFor=\"title\">Note Title</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"content\">Note Content</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createNote: (note) => dispatch(createNote(note))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNote)","export const createNote = (note) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n     // const testImage = \r\n      firestore.collection('notesList').add({\r\n        ...note,\r\n        \r\n        authorId: authorId,\r\n        createdAt: new Date()\r\n        //testImage: \r\n        }).then(() => {\r\n            console.log('Create Hit');\r\n            dispatch({type: 'CREATE', note});\r\n        }).catch((err) => {\r\n            console.log('error Hit');\r\n            dispatch({type: 'CREATE_ERROR', err});\r\n        })\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect, getFirebase } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport firebase from 'firebase';\r\nimport moment from 'moment';\r\n\r\n//Globals\r\nlet noteContent = [];\r\nlet noteTitle = [];\r\nlet noteCreatedAt = [];\r\nlet noteProject = [];\r\nlet noteAuthor = [];\r\n\r\n\r\nclass NotesDashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.rows = [];\r\n        this.projectIdn = null;\r\n    }\r\n\r\n\r\n    // Note List Generation\r\n    async componentDidMount() {\r\n\r\n        const fsDB = firebase.firestore();\r\n        await fsDB.collection(\"notesList\").get().then(function (querySnapshot) {\r\n            let i = 0;\r\n            querySnapshot.forEach(function (doc) {\r\n\r\n                noteTitle[i] = doc.data().title;\r\n                noteContent[i] = doc.data().content;\r\n                noteCreatedAt[i] = doc.data().createdAt;\r\n                noteProject[i] = doc.data().projectId;\r\n                noteAuthor[i] =  doc.data().authorName;\r\n                i = i + 1;\r\n\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n        try {\r\n            this.projectIdn = this.props.location.aboutProps.id.substr(this.props.location.aboutProps.id.lastIndexOf('/') + 1);\r\n        }\r\n        catch (err) {\r\n            this.props.history.push('/');\r\n        }\r\n        console.log(\"Logs: \" + noteTitle.length);\r\n        if (noteTitle.length != 0) {\r\n\r\n            for (let i = noteTitle.length; i >= 0; i--) {\r\n                if (noteProject[i] == this.projectIdn)\r\n                    this.rows.push(\r\n                        <div className=\"dashboard container\">\r\n                            <div className=\"row\" id=\"eachRow\">\r\n                                <div className=\"col s12 m6\">\r\n\r\n                                    <div className=\"card z-depth-0 project-summary\">\r\n                                        <div className=\"card-content grey-text text-darken-3\">\r\n                                            <span className=\"card-title\">{noteTitle[i]}</span>\r\n                                            <p>Content : {noteContent[i]} </p>\r\n                                            <p>Author: {noteAuthor[i]}</p>\r\n                                            <p>Created At: {moment(noteCreatedAt[i].toDate()).calendar()}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>);\r\n            }\r\n\r\n\r\n            this.rows.length = 3;\r\n\r\n            return (\r\n                <div>{this.rows.sort()}</div>\r\n            );\r\n\r\n\r\n\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <p>Loading Notes...</p>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(NotesDashboard);","import React, { Component } from 'react';\r\n\r\n\r\nclass signInInterface extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n      // Code for handling changes made in the Sign in form\r\n    }\r\n    handleSubmit = (e) => {\r\n       // Code for handling submission on the sign in form.\r\n    }\r\n    render() {\r\n        // Rendering the class component.\r\n        return(\r\n            null\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default signInInterface;","import { connect } from \"react-redux\";\nimport {signIn} from '../../../store/actions/authActions';\nimport { Redirect } from \"react-router-dom\";\nimport React from 'react';\nimport sigInInterface from './signInInterface';\n\nclass userSignIn extends sigInInterface {\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signIn(this.state);\n    }\n    render() {\n        const {authError, auth} = this.props;\n        if(auth.uid) return <Redirect to='/'/>\n\n        return (\n            <div className=\"conatiner\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">User Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p>: null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapstateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\nsignIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapstateToProps, mapDispatchToProps)(userSignIn);\n","import { connect } from \"react-redux\";\r\nimport {signIn} from '../../../store/actions/authActions';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport sigInInterface from './signInInterface';\r\n\r\nclass doctorSignIn extends sigInInterface {\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Doctor Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapstateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\nsignIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(doctorSignIn);\r\n","import React from 'react';\nimport { Component } from 'react'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from '../src/Components/View/layout/Navbar';\nimport Dashboard from '../src/Components/View/dashboard/Dasboard';\nimport ProjectDetails from '../src/Components/Controller/projects/ProjectDetails';\nimport SignIn from '../src/Components/View/auth/SignIn';\nimport SignUp from '../src/Components/View/auth/SignUp';\nimport DocSignUp from '../src/Components/View/auth/DocSignUp';\nimport CreateProject from '../src/Components/Controller/projects/CreateProject';\nimport CreateNote from '../src/Components/Controller/notes/CreateNote';\nimport NotesDashboard from '../src/Components/Controller/notes/NotesDashboard';\nimport userSignIn from '../src/Components/View/auth/userSignIn';\nimport doctorSignIn from '../src/Components/View/auth/doctorSignIn';\n\nclass App extends Component {\n\n  \n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n\n        <Navbar />\n        \n          \n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component = {ProjectDetails}/>\n            <Route path='/signin' component = {SignIn}/>\n            <Route path='/usersignin' component = {userSignIn}/>\n            <Route path='/doctorsignin' component = {doctorSignIn}/>\n            <Route path='/signup' component = {SignUp} />\n            <Route path='/docsignup' component = {DocSignUp} />\n            <Route path='/createproject' component = {CreateProject} />\n            <Route path='/createnote' component = {CreateNote} />\n            <Route path='/notedashboard' component = {NotesDashboard}/>\n          </Switch>\n          \n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n};\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('LOGIN ERROR');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n\n        case 'LOGIN_SUCCESS':\n            console.log('LOGIN SUCCESS');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout sucess')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n\n\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n    ]\n};\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE':\n            console.log('created', action.project)\n            return state;\n        case 'CREATE_ERROR':\n            console.log('Create error', action.err)\n            return state;\n        default:\n            return state;\n    }\n   \n}\n\nexport default projectReducer;","const initState = {\r\n    notes: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\r\n    ]\r\n};\r\nconst noteReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            console.log('created', action.note)\r\n            return state;\r\n        case 'CREATE_ERROR':\r\n            console.log('Create error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n   \r\n}\r\n\r\nexport default noteReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport noteReducer from './noteReducer';\nimport {combineReducers} from 'redux';\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    note: noteReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n//import { reduxFirestore, getFirestore } from 'redux-firestore';\n//import { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\n    reduxFirestore(fbConfig), // redux bindings for firestore\n\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) // redux binding for firebase\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n\n})\n\n"],"sourceRoot":""}