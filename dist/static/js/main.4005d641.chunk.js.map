{"version":3,"sources":["store/actions/authActions.js","Components/View/layout/SignedInLinks.js","Components/View/layout/SignedOutLinks.js","Components/View/layout/Navbar.js","Components/View/dashboard/Notifications.js","Components/Controller/projects/ProjectSummary.js","Components/Controller/projects/ProjectList.js","Components/View/dashboard/Dasboard.js","Components/Controller/projects/ProjectDetails.js","Components/View/auth/SignIn.js","Components/View/auth/SignUp.js","config/fbConfig.js","Components/Controller/projects/CreateProject.js","store/actions/projectActions.js","Components/View/auth/signInInterface.js","Components/View/auth/userSignIn.js","Components/View/auth/doctorSignIn.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","connect","signOut","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","useruser","currentUser","userId","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","authorId","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","projectdetails","require","origin","myHeaders","Headers","ProjectDetails","handleChange","append","formdata","FormData","url","fetch","method","headers","body","redirect","response","text","result","error","width","src","ownProps","match","params","data","SignIn","onSubmit","handleSubmit","authError","SignUp","firstName","lastName","e","setState","target","value","preventDefault","signUp","htmlFor","onChange","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","storage","CreateProject","handleImageChange","files","image","handleUpload","fd","name","axios","post","onUploadProgress","progressEvent","Math","round","loaded","total","res","ref","child","getDownloadURL","createProject","history","push","bind","add","Date","signInInterface","userSignIn","sigInInterface","creds","doctorSignIn","App","exact","path","component","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4005d641.chunk.js","sourcesContent":["//import { getFirebase, firebaseReducer } from \"react-redux-firebase\"\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        });\n    }\n}\n\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0]+newUser.lastName[0]\n            })\n            //resp.user\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({type: 'SIGNUP_ERROR', err})\n        })\n\n\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport { connect} from \"react-redux\";\nimport {signOut} from '../../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return  (\n        <ul className='right'>\n            <li><NavLink to='/createproject'>New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {props.profile.initials}\n                </NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className='right'>\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\n            <li><NavLink to='/signin'>Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from \"react-redux\";\n\nconst Navbar = (props) => {\n    const {auth, profile} = props;\n    //console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return  (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">CanTest - Skin Cancer Detection</Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return{\n\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);  ","import React from 'react';\nimport moment from 'moment';\nimport firebase from 'firebase';\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                             let useruser = firebase.auth().currentUser;\n                            //console.log(\"SAME \"+item.userId+\" \"+useruser.uid);\n                             if (item.userId == useruser.uid) {\n                                console.log(\"SAME \"+item.userId+\" \"+useruser.uid);\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n\n                            )\n                             }\n                        })}\n                    </ul>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Notifications;","import React from 'react';\nimport ProjectList from './ProjectList';\nimport moment from 'moment';\nimport { getFirebase } from 'react-redux-firebase'\nimport firebase from 'firebase';\n\nconst ProjectSummary = ({ project }) => {\n   // firebase.auth().onAuthStateChanged(function (user) {\n     //   if (project.authorId == user.uid) {\n       //     console.log(\"Project Author:\"+project.authorId);\n\n            return (\n\n                <div className=\"card z-depth-0 project-summary\">\n                    <div className=\"card-content grey-text text-darken-3\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                    </div>\n                </div>\n\n            );\n    //    }\n        //return null\n   // });\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\n\n\nconst ProjectList = ({ projects }) => {\n    let userId = null;\n\n\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n\n                let useruser = firebase.auth().currentUser;\n\n                if (project.authorId == useruser.uid) {\n                    //console.log(\"SAME \"+project.authorId+\" \"+useruser.uid);\n                    return (\n                        \n                        <Link to={'/project/' + project.id} key={project.id} >\n                            <ProjectSummary project={project} />\n                        </Link>\n\n                    );\n                }\n\n\n            })}\n        </div>\n\n\n    );\n}\n\n\nexport default ProjectList;\n\n","import React, { Component } from \"react\";\nimport Notifications from './Notifications';\nimport ProjectList from '../../Controller/projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, getFirebase } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\n\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n                \n            return (\n                <div className=\"dashboard container\">\n                    <div className=\"row\">\n                        <div className=\"col s12 m6\">\n                            <ProjectList  projects={projects}  />\n                        </div>\n\n                        <div className=\"col s12 m5 offset-m1\">\n                            <Notifications notifications = {notifications}/>\n                        </div>\n\n                    </div>\n                </div>\n            );\n\n\n        \n        \n    }\n\n}\n\nconst mapStatetoProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\n    ])\n)\n    (Dashboard);","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from 'moment';\nimport axios from 'axios';\nconst cors = require('cors')({ origin: true });\nlet projectdetails = null;\nvar myHeaders = new Headers();\n\nclass ProjectDetails extends Component {\n    constructor() {\n        super();\n\n        let userName = null;\n        let id = null;\n        let createdAt = null;\n\n    }\n\n\n\n    handleChange = () => {\n\n        myHeaders.append(\"Content-Type\", \"multipart/form-data; boundary=--------------------------801099460826516726188717\");\n        var formdata = new FormData();\n        formdata.append(\"image-url\", projectdetails.url);\n        formdata.append(\"user-id\", \"batman\");\n\n        var requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: formdata,\n            redirect: 'follow'\n        };\n\n        fetch(\"https://flask-sc-2qevsxcoxq-uc.a.run.app/skin-cancer/get-prediction\", requestOptions)\n            .then(response => response.text())\n            .then(result => console.log(\"This is the result: \" + result))\n            .catch(error => console.log('error', error));\n\n        /*\n        \n                console.log(\"POST:\" + projectdetails.url +\" \"+projectdetails.authorId)\n                let params = {\n                    \"image-url\": projectdetails.url,\n                    \"user-id\": projectdetails.authorId\n                }\n                axios.post(\"https://reqres.in/api/users\", params)\n                    .then(function (res) {\n                        console.log(\"API Return: \" + JSON.stringify(res.data, null, '\\t'));\n                        let jsonObject = JSON.parse(JSON.stringify(res.data, null, '\\t'));\n                        \n                    })\n                    .catch(function (error) {\n                        console.log(\"API Error: \" + error);\n                    })\n        */\n    }\n\n    render() {\n\n\n        const { project, auth } = this.props;\n        //const { post } = this.state;\n\n\n\n\n\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        if (project) {\n            projectdetails = project;\n            return (\n                <div className=\"container section project-details\">\n                    <div className=\"card z-depth-0\">\n                        <div className=\"card-content\">\n                            <span className=\"card-title\">{project.title}</span>\n                            <p>{project.content}</p>\n                        </div>\n                        <div className=\"card-action gret lighten-4 grey-text\">\n                            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n\n                            <img className=\"materialboxed\" width=\"650\" src={project.url} />\n\n                        </div>\n\n                        <div className=\"input-field\">\n                            <button className=\"btn pink darken-1 z-depth-0\" onClick={this.handleChange} >Check Up</button>\n                        </div>\n\n                    </div>\n                </div>\n\n            )\n        }\n        return (\n            <div className=\"container\">\n                <p>Loading Project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n\n)(ProjectDetails)\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    \r\n\r\n                    <ul className='center'>\r\n                    <h5 className=\"grey-text text-darken-3\">Choose the User Profile Type</h5>\r\n                        <li><NavLink to='/usersignin' className=\"btn pink lighten-1 z-depth-0\">User</NavLink></li>\r\n                        <p></p>\r\n                        <li><NavLink to='/doctorsignin' className=\"btn pink lighten-1 z-depth-0\">Doctor</NavLink></li>\r\n                    </ul>\r\n                </form>\r\n            </div >\r\n\r\n\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapstateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapstateToProps)(SignIn);","import React, { Component } from 'react'\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { signUp } from '../../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state);\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if (auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"conatiner\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p>: null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\n\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDCteT6Ophq9LAqvBnc1nN6hyZFgV9qIEY\",\n    authDomain: \"imageupload-9a880.firebaseapp.com\",\n    databaseURL: \"https://imageupload-9a880.firebaseio.com\",\n    projectId: \"imageupload-9a880\",\n    storageBucket: \"imageupload-9a880.appspot.com\",\n    messagingSenderId: \"387742874102\",\n    appId: \"1:387742874102:web:1e46221f8a65c716d06fd7\",\n    measurementId: \"G-BB3F12MLQ9\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nconst storage = firebase.storage();\n\nexport {\n    storage, firebase as default\n}","import React, { Component } from 'react'\nimport { createProject } from '../../../store/actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { storage } from '../../../config/fbConfig';\nimport ProjectDetails from './ProjectDetails';\n\n\nclass CreateProject extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: null,\n            url: '',\n            \n            title: '',\n            content: '',\n            //selectedFile: null\n        }\n\n        this.handleChange = this\n            .handleChange\n            .bind(this);\n        this.handleUpload = this.handleUpload.bind(this);\n    }\n\n    \n\n\n    handleChange = (e) => {\n        console.log(\"HITT\");\n\n\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n\n\n\n    }\n\n    handleImageChange = e => {\n\n        if (e.target.files[0]) {\n            console.log(\"hitt Image\");\n            const image = e.target.files[0];\n            this.setState(() => ({ image }));\n            \n        }\n\n    }\n    handleUpload = (e) => {\n        e.preventDefault();\n\n        \n\n        const fd = new FormData();\n        fd.append('image', this.state.image, this.state.image.name);\n        axios.post('https://us-central1-imageupload-9a880.cloudfunctions.net/uploadFile', fd, {\n            onUploadProgress: progressEvent => {\n                console.log('UploadProgress: ' + Math.round((progressEvent.loaded / progressEvent.total) * 100) + '%')\n            }\n        })\n            .then(res => {\n                storage.ref().child(this.state.image.name).getDownloadURL().then(url => {\n                   \n                    this.setState({\n                        url: url,\n                        image: null\n                    });\n                   // console.log(\"HIT\" + url);\n            }).then(() => {\n                console.log(\"HIT State\");\n            console.log(this.state);\n            this.props.createProject(this.state);\n            this.props.history.push('/');\n            } );\n\n            \n        });\n\n       \n\n    }\n\n\n\n\n\n    render() {\n        const { auth } = this.props;\n        if (!auth.uid) return <Redirect to='/signin' />\n\n        return (\n\n\n            <div className=\"conatiner\">\n\n\n                <form onSubmit={this.handleUpload} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n                    </div>\n\n                    <input type=\"file\" onChange={this.handleImageChange} />\n\n\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\" >Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirestore}) => {\n      // make async call to database\n      const firestore = getFirestore();\n      const profile = getState().firebase.profile;\n      const authorId = getState().firebase.auth.uid;\n     // const testImage = \n      firestore.collection('projects').add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n        //testImage: \n        }).then(() => {\n            console.log('Create Hit');\n            dispatch({type: 'CREATE', project});\n        }).catch((err) => {\n            console.log('error Hit');\n            dispatch({type: 'CREATE_ERROR', err});\n        })\n        \n    }\n}","import React, { Component } from 'react';\r\n\r\n\r\nclass signInInterface extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n      // Code for handling changes made in the Sign in form\r\n    }\r\n    handleSubmit = (e) => {\r\n       // Code for handling submission on the sign in form.\r\n    }\r\n    render() {\r\n        // Rendering the class component.\r\n        return(\r\n            null\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default signInInterface;","import { connect } from \"react-redux\";\nimport {signIn} from '../../../store/actions/authActions';\nimport { Redirect } from \"react-router-dom\";\nimport React from 'react';\nimport sigInInterface from './signInInterface';\n\nclass userSignIn extends sigInInterface {\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n\n        });\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signIn(this.state);\n    }\n    render() {\n        const {authError, auth} = this.props;\n        if(auth.uid) return <Redirect to='/'/>\n\n        return (\n            <div className=\"conatiner\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">User Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p>: null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapstateToProps = (state) => {\n    return{\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\nsignIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapstateToProps, mapDispatchToProps)(userSignIn);\n","import { connect } from \"react-redux\";\r\nimport {signIn} from '../../../store/actions/authActions';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport sigInInterface from './signInInterface';\r\n\r\nclass doctorSignIn extends sigInInterface {\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"conatiner\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Doctor Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapstateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\nsignIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(doctorSignIn);\r\n","import React from 'react';\nimport { Component } from 'react'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from '../src/Components/View/layout/Navbar';\nimport Dashboard from '../src/Components/View/dashboard/Dasboard';\nimport ProjectDetails from '../src/Components/Controller/projects/ProjectDetails';\nimport SignIn from '../src/Components/View/auth/SignIn';\nimport SignUp from '../src/Components/View/auth/SignUp'\nimport CreateProject from '../src/Components/Controller/projects/CreateProject';\nimport userSignIn from '../src/Components/View/auth/userSignIn';\nimport doctorSignIn from '../src/Components/View/auth/doctorSignIn';\n\nclass App extends Component {\n\n  \n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n\n        <Navbar />\n        \n          \n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component = {ProjectDetails}/>\n            <Route path='/signin' component = {SignIn}/>\n            <Route path='/usersignin' component = {userSignIn}/>\n            <Route path='/doctorsignin' component = {doctorSignIn}/>\n            <Route path='/signup' component = {SignUp} />\n            <Route path='/createproject' component = {CreateProject} />\n          </Switch>\n          \n        </div>\n      </BrowserRouter>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n};\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('LOGIN ERROR');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n\n        case 'LOGIN_SUCCESS':\n            console.log('LOGIN SUCCESS');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout sucess')\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n\n\n}\n\nexport default authReducer;","const initState = {\n    projects: [\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n        { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' }\n    ]\n};\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE':\n            console.log('created', action.project)\n            return state;\n        case 'CREATE_ERROR':\n            console.log('Create error', action.err)\n            return state;\n        default:\n            return state;\n    }\n   \n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport {combineReducers} from 'redux';\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n//import { reduxFirestore, getFirestore } from 'redux-firestore';\n//import { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\n    reduxFirestore(fbConfig), // redux bindings for firestore\n\n    reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) // redux binding for firebase\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n\n})\n\n"],"sourceRoot":""}